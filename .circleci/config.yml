version: 2.0
jobs:
  build:
    docker:
      - image: takahiroi/suilog_app:latest
      - image: takahiroi/suilog_db:latest
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_suilog_db
          MYSQL_USER: suilog
          MYSQL_PASSWORD: Yuri1226
    environment:
      - DB_HOST: 127.0.0.1
          

    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      
      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi 
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm run dev
      - run:
          name: dockerize のインストール
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: db の待機
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      # - run: echo "APP_KEY=" > .env.testing
      - run: cp .env.circleci .env
      - run: php artisan key:generate
      - run: php artisan config:clear
      - run: php artisan config:cache
      - run: php artisan migrate:refresh --seed
      - run:
          name: php test
          command: vendor/bin/phpunit
      - store_artifacts: 
          path: ./storage/logs


  deploy:
    docker:
      - image: takahiroi/suilog_app:latest
    steps:
      - add_ssh_keys
      - run:
          name: deploy 
          command: | # シードを入れたい時はこれを、php artisan migrate:refresh --seed --force && \
            ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd su-product && \
              git pull origin main && \
              composer install -n --no-dev --prefer-dist && \ 
              npm ci && \
              npm run prod && \
              php artisan config:cache" 


workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main